name: SnipSnap
description: App for Salons
author: Bilal Shahzanain Jahanzaib

# The following line prevents the package from being accidentally published to
# pub.dev using `pub publish`. This is preferred for private packages.
publish_to: "none" # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
version: 1.3.0+201112

environment:
  sdk: ">=2.8.0 <3.0.0"
  flutter: ">=1.22.0 <2.0.0"

dependencies:
  flutter:
    sdk: flutter
  flutter_localizations:
    sdk: flutter
  # A Flutter plugin for iOS and Android allowing access to the device cameras.
  camera: ^0.5.8+11
  # A Flutter plugin for finding commonly used locations on the filesystem.
  path_provider: ^1.6.24
  # A comprehensive, cross-platform path manipulation library for Dart.
  path: ^1.8.0-nullsafety.1
  # A simple Service Locator.
  get_it: ^5.0.1
  # BLoC Design Pattern (Business Logic Component)
  bloc: ^6.1.0
  # Widgets that make it easy to integrate blocs and cubits into Flutter.
  flutter_bloc: ^6.1.1
  # Dart implementation of sprintf.
  sprintf: ^5.0.0
  # Flutter plugin for reading and writing simple key-value pairs. Wraps NSUserDefaults on iOS and SharedPreferences on Android.
  shared_preferences: ^0.5.12+4
  # A Flutter plugin to easily handle realtime location in iOS and Android.
  location: ^3.0.2
  # Introduction/Onboarding package for flutter app with some customizations possibilities.
  introduction_screen: ^1.0.9
  # A package provides an easy way to add shimmer effect in Flutter project.
  shimmer: ^1.1.2
  # A Markdown renderer for Flutter.
  flutter_markdown: ^0.5.0
  # Flutter plugin for launching a URL on Android and iOS. Supports web, phone, SMS, and email schemes.
  url_launcher: ^5.7.10
  # A Flutter plugin for integrating Google Maps in iOS and Android applications.
  google_maps_flutter: ^1.0.6
  # A widget provided to the flutter scroll component drop-down refresh and pull up load.
  pull_to_refresh: ^1.6.2
  # An abstract class that helps to implement equality without needing to explicitly override == and hashCode.
  equatable: ^1.2.5
  # Custom Radio Buttons and Grouped Check Box Button.
  custom_radio_grouped_button: any
  # The best swiper(carousel) for flutter, with multiple layouts, infinite loop. Compatible with Android & iOS.
  flutter_swiper: ^1.1.6
  # Flutter library to load and cache network images. Can also be used with placeholder and error widgets.
  cached_network_image: ^2.3.3
  # Flutter plugin for sharing content via the platform share UI, using the ACTION_SEND intent on Android and UIActivityViewController on iOS.
  share: ^0.6.5+4
  # Flutter plugin for querying information about the application package, such as CFBundleVersion on iOS or versionCode on Android.
  package_info: ^0.4.3+2
  # Flutter plugin for selecting images from the Android and iOS image library, and taking new pictures with the camera.
  image_picker: ^0.6.7+14
  # A list with helper methods to programmatically scroll to an item.
  scrollable_positioned_list: ^0.1.8
  # Flutter library for simple and fast QR code rendering via a Widget or custom painter.
  qr_flutter: ^3.2.0
  # A really simple Flutter plugin to add events to each platform's default calendar.
  add_2_calendar: ^1.4.0
  # Plugin to detect whether the current device is an emulator or a simulator.
  flutter_is_emulator: ^1.0.0
  # Slidable list item with directional slide actions that can be dismissed.
  flutter_slidable: ^0.5.7
  # Provides APIs for debugging and error logging.
  logging: ^0.11.4
  # Native dart package for logging appenders usable with the logging package.
  logging_appenders: ^0.4.3
  # A simple zoomable image/content widget.
  photo_view: ^0.10.2

  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.0
  firebase_analytics: any
  device_info_plus: 
  image_cropper: any
  flutter_image_compress: any
  font_awesome_flutter: any
  connectivity_plus: any
  permission_handler:
  rolling_nav_bar:
  email_validator:
  date_format:
  percent_indicator:
  fl_chart:
  flutter_sinusoidals: 
  provider:
  flutter_html:
  flutter_rating_bar:
  webviewx:
  webview_flutter:
  
dev_dependencies:
  flutter_test:
    sdk: flutter

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec
# The following section is specific to Flutter.
flutter:
  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/data/
    - assets/images/
    - assets/images/cc/
    - assets/images/onboarding/
    - assets/images/data/
    - assets/images/data/users/
    - assets/images/data/staff/
    - assets/images/data/categories/
    - assets/images/data/locations/
  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware.
  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages
  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
  fonts:
    - family: Raleway
      fonts:
        - asset: assets/fonts/Raleway-Black.ttf
        - asset: assets/fonts/Raleway-BlackItalic.ttf
        - asset: assets/fonts/Raleway-Bold.ttf
        - asset: assets/fonts/Raleway-BoldItalic.ttf
        - asset: assets/fonts/Raleway-ExtraBold.ttf
        - asset: assets/fonts/Raleway-ExtraBoldItalic.ttf
        - asset: assets/fonts/Raleway-ExtraLight.ttf
        - asset: assets/fonts/Raleway-ExtraLightItalic.ttf
        - asset: assets/fonts/Raleway-Italic.ttf
        - asset: assets/fonts/Raleway-Light.ttf
        - asset: assets/fonts/Raleway-LightItalic.ttf
        - asset: assets/fonts/Raleway-Medium.ttf
        - asset: assets/fonts/Raleway-MediumItalic.ttf
        - asset: assets/fonts/Raleway-Regular.ttf
        - asset: assets/fonts/Raleway-SemiBold.ttf
        - asset: assets/fonts/Raleway-SemiBoldItalic.ttf
        - asset: assets/fonts/Raleway-Thin.ttf
        - asset: assets/fonts/Raleway-ThinItalic.ttf
    - family: Roboto
      fonts:
        - asset: assets/fonts/Roboto-Black.ttf
        - asset: assets/fonts/Roboto-BlackItalic.ttf
        - asset: assets/fonts/Roboto-Bold.ttf
        - asset: assets/fonts/Roboto-BoldItalic.ttf
        - asset: assets/fonts/Roboto-Italic.ttf
        - asset: assets/fonts/Roboto-Light.ttf
        - asset: assets/fonts/Roboto-LightItalic.ttf
        - asset: assets/fonts/Roboto-Medium.ttf
        - asset: assets/fonts/Roboto-MediumItalic.ttf
        - asset: assets/fonts/Roboto-Regular.ttf
        - asset: assets/fonts/Roboto-Thin.ttf
        - asset: assets/fonts/Roboto-ThinItalic.ttf
    - family: halter
      fonts:
        - asset: assets/fonts/halter.ttf
    - family: credit-card
      fonts:
        - asset: assets/fonts/credit-card.ttf
flutter_intl:
  enabled: true # Required. Must be set to true to activate the plugin. Default: false
  class_name: L10n # Optional. Sets the name for the generated localization class. Default: S
  main_locale: en # Optional. Sets the main locale used for generating localization files. Provided value should consist of language code and optional script and country codes separated with underscore (e.g. 'en', 'en_GB', 'zh_Hans', 'zh_Hans_CN'). Default: en
